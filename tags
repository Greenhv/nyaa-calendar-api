!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/c8405be/
$exists	src/generated/prisma-client/index.d.ts	/^  $exists: Exists;$/;"	p	interface:Prisma
$fragment	src/generated/prisma-client/index.d.ts	/^  $fragment<T>(fragment: string | DocumentNode): Promise<T>;$/;"	m	interface:Fragmentable
$graphql	src/generated/prisma-client/index.d.ts	/^  $graphql: <T = any>($/;"	p	interface:Prisma
$subscribe	src/generated/prisma-client/index.d.ts	/^  $subscribe: Subscription;$/;"	p	interface:Prisma
1. Bootstrap GraphQL server in directory `my-app`, based on `node-basic` boilerplate	README.md	/^# 1. Bootstrap GraphQL server in directory `my-app`, based on `node-basic` boilerplate$/;"	c
2. When prompted, deploy the Prisma service to a _public cluster_	README.md	/^# 2. When prompted, deploy the Prisma service to a _public cluster_$/;"	c
3. Navigate to the new project	README.md	/^# 3. Navigate to the new project$/;"	c
4. Start server (runs on http://localhost:4000)	README.md	/^# 4. Start server (runs on http:\/\/localhost:4000)$/;"	c
@babel/cli	package.json	/^    "@babel\/cli": "^7.5.0",$/;"	s	object:devDependencies
@babel/core	package.json	/^    "@babel\/core": "^7.5.0",$/;"	s	object:devDependencies
@babel/node	package.json	/^    "@babel\/node": "^7.5.0",$/;"	s	object:devDependencies
@babel/preset-env	package.json	/^    "@babel\/preset-env": "^7.5.0",$/;"	s	object:devDependencies
AND	src/generated/prisma-client/index.d.ts	/^  AND?: Maybe<AnimeSubscriptionWhereInput[] | AnimeSubscriptionWhereInput>;$/;"	p	interface:AnimeSubscriptionWhereInput
AND	src/generated/prisma-client/index.d.ts	/^  AND?: Maybe<AnimeWhereInput[] | AnimeWhereInput>;$/;"	p	interface:AnimeWhereInput
AggregateAnime	src/generated/prisma-client/index.d.ts	/^export interface AggregateAnime {$/;"	i
AggregateAnimePromise	src/generated/prisma-client/index.d.ts	/^export interface AggregateAnimePromise$/;"	i
AggregateAnimeSubscription	src/generated/prisma-client/index.d.ts	/^export interface AggregateAnimeSubscription$/;"	i
Anime	src/generated/prisma-client/index.d.ts	/^export interface Anime {$/;"	i
AnimeConnection	src/generated/prisma-client/index.d.ts	/^export interface AnimeConnection {$/;"	i
AnimeConnectionPromise	src/generated/prisma-client/index.d.ts	/^export interface AnimeConnectionPromise$/;"	i
AnimeConnectionSubscription	src/generated/prisma-client/index.d.ts	/^export interface AnimeConnectionSubscription$/;"	i
AnimeCreateInput	src/generated/prisma-client/index.d.ts	/^export interface AnimeCreateInput {$/;"	i
AnimeEdge	src/generated/prisma-client/index.d.ts	/^export interface AnimeEdge {$/;"	i
AnimeEdgePromise	src/generated/prisma-client/index.d.ts	/^export interface AnimeEdgePromise extends Promise<AnimeEdge>, Fragmentable {$/;"	i
AnimeEdgeSubscription	src/generated/prisma-client/index.d.ts	/^export interface AnimeEdgeSubscription$/;"	i
AnimeNullablePromise	src/generated/prisma-client/index.d.ts	/^export interface AnimeNullablePromise$/;"	i
AnimeOrderByInput	src/generated/prisma-client/index.d.ts	/^export type AnimeOrderByInput =$/;"	a
AnimePreviousValues	src/generated/prisma-client/index.d.ts	/^export interface AnimePreviousValues {$/;"	i
AnimePreviousValuesPromise	src/generated/prisma-client/index.d.ts	/^export interface AnimePreviousValuesPromise$/;"	i
AnimePreviousValuesSubscription	src/generated/prisma-client/index.d.ts	/^export interface AnimePreviousValuesSubscription$/;"	i
AnimePromise	src/generated/prisma-client/index.d.ts	/^export interface AnimePromise extends Promise<Anime>, Fragmentable {$/;"	i
AnimeSubscription	src/generated/prisma-client/index.d.ts	/^export interface AnimeSubscription$/;"	i
AnimeSubscriptionPayload	src/generated/prisma-client/index.d.ts	/^export interface AnimeSubscriptionPayload {$/;"	i
AnimeSubscriptionPayloadPromise	src/generated/prisma-client/index.d.ts	/^export interface AnimeSubscriptionPayloadPromise$/;"	i
AnimeSubscriptionPayloadSubscription	src/generated/prisma-client/index.d.ts	/^export interface AnimeSubscriptionPayloadSubscription$/;"	i
AnimeSubscriptionWhereInput	src/generated/prisma-client/index.d.ts	/^export interface AnimeSubscriptionWhereInput {$/;"	i
AnimeUpdateInput	src/generated/prisma-client/index.d.ts	/^export interface AnimeUpdateInput {$/;"	i
AnimeUpdateManyMutationInput	src/generated/prisma-client/index.d.ts	/^export interface AnimeUpdateManyMutationInput {$/;"	i
AnimeWhereInput	src/generated/prisma-client/index.d.ts	/^export interface AnimeWhereInput {$/;"	i
AnimeWhereUniqueInput	src/generated/prisma-client/index.d.ts	/^export type AnimeWhereUniqueInput = AtLeastOne<{$/;"	a
AtLeastOne	src/generated/prisma-client/index.d.ts	/^export type AtLeastOne<T, U = { [K in keyof T]: Pick<T, K> }> = Partial<T> &$/;"	a
BatchPayload	src/generated/prisma-client/index.d.ts	/^export interface BatchPayload {$/;"	i
BatchPayloadPromise	src/generated/prisma-client/index.d.ts	/^export interface BatchPayloadPromise$/;"	i
BatchPayloadSubscription	src/generated/prisma-client/index.d.ts	/^export interface BatchPayloadSubscription$/;"	i
Boolean	src/generated/prisma-client/index.d.ts	/^export type Boolean = boolean;$/;"	a
ClientConstructor	src/generated/prisma-client/index.d.ts	/^export interface ClientConstructor<T> {$/;"	i
Commands	README.md	/^### Commands$/;"	S
Contributing	README.md	/^## Contributing$/;"	s
Documentation	README.md	/^## Documentation$/;"	s
Exists	src/generated/prisma-client/index.d.ts	/^export interface Exists {$/;"	i
Features	README.md	/^## Features$/;"	s
Fragmentable	src/generated/prisma-client/index.d.ts	/^export interface Fragmentable {$/;"	i
FragmentableArray	src/generated/prisma-client/index.d.ts	/^export type FragmentableArray<T> = Promise<Array<T>> & Fragmentable;$/;"	a
Getting started	README.md	/^## Getting started$/;"	s
ID_Input	src/generated/prisma-client/index.d.ts	/^export type ID_Input = string | number;$/;"	a
ID_Output	src/generated/prisma-client/index.d.ts	/^export type ID_Output = string;$/;"	a
Int	src/generated/prisma-client/index.d.ts	/^export type Int = number;$/;"	a
Long	src/generated/prisma-client/index.d.ts	/^export type Long = string;$/;"	a
Maybe	src/generated/prisma-client/index.d.ts	/^export type Maybe<T> = T | undefined | null;$/;"	a
MutationType	src/generated/prisma-client/index.d.ts	/^export type MutationType = "CREATED" | "UPDATED" | "DELETED";$/;"	a
NOT	src/generated/prisma-client/index.d.ts	/^  NOT?: Maybe<AnimeSubscriptionWhereInput[] | AnimeSubscriptionWhereInput>;$/;"	p	interface:AnimeSubscriptionWhereInput
NOT	src/generated/prisma-client/index.d.ts	/^  NOT?: Maybe<AnimeWhereInput[] | AnimeWhereInput>;$/;"	p	interface:AnimeWhereInput
Node	src/generated/prisma-client/index.d.ts	/^export interface Node {}$/;"	i
NodeNode	src/generated/prisma-client/index.d.ts	/^export interface NodeNode {$/;"	i
OR	src/generated/prisma-client/index.d.ts	/^  OR?: Maybe<AnimeSubscriptionWhereInput[] | AnimeSubscriptionWhereInput>;$/;"	p	interface:AnimeSubscriptionWhereInput
OR	src/generated/prisma-client/index.d.ts	/^  OR?: Maybe<AnimeWhereInput[] | AnimeWhereInput>;$/;"	p	interface:AnimeWhereInput
PageInfo	src/generated/prisma-client/index.d.ts	/^export interface PageInfo {$/;"	i
PageInfoPromise	src/generated/prisma-client/index.d.ts	/^export interface PageInfoPromise extends Promise<PageInfo>, Fragmentable {$/;"	i
PageInfoSubscription	src/generated/prisma-client/index.d.ts	/^export interface PageInfoSubscription$/;"	i
Prisma	src/generated/prisma-client/index.d.ts	/^export interface Prisma {$/;"	i
Project structure	README.md	/^### Project structure$/;"	S
Query	src/index.js	/^  Query: {$/;"	c	class:resolvers
Requirements	README.md	/^## Requirements$/;"	s
String	src/generated/prisma-client/index.d.ts	/^export type String = string;$/;"	a
Subscription	src/generated/prisma-client/index.d.ts	/^export interface Subscription {$/;"	i
aggregate	src/generated/prisma-client/index.d.ts	/^  aggregate: <T = AggregateAnimePromise>() => T;$/;"	p	interface:AnimeConnectionPromise
aggregate	src/generated/prisma-client/index.d.ts	/^  aggregate: <T = AggregateAnimeSubscription>() => T;$/;"	p	interface:AnimeConnectionSubscription
anime	src/generated/prisma-client/index.d.ts	/^  anime: ($/;"	p	interface:Subscription
anime	src/generated/prisma-client/index.d.ts	/^  anime: (where: AnimeWhereUniqueInput) => AnimeNullablePromise;$/;"	p	interface:Prisma
anime	src/generated/prisma-client/index.d.ts	/^  anime: (where?: AnimeWhereInput) => Promise<boolean>;$/;"	p	interface:Exists
animes	src/generated/prisma-client/index.d.ts	/^  animes: (args?: {$/;"	p	interface:Prisma
animes	src/helper.js	/^		const animes = await apolloClient.query({$/;"	C
animes	src/index.js	/^    animes: async (parent, { currentDate }, context) => {$/;"	p	class:resolvers.Query
animesConnection	src/generated/prisma-client/index.d.ts	/^  animesConnection: (args?: {$/;"	p	interface:Prisma
animesQuery	src/animesQuery.js	/^export const animesQuery = gql`$/;"	C
apollo-boost	package.json	/^    "apollo-boost": "^0.4.3",$/;"	s	object:dependencies
client	src/index.js	/^const client = new ApolloClient({ uri: 'https:\/\/graphql.anilist.co' });$/;"	C
count	src/generated/prisma-client/index.d.ts	/^  count: () => Promise<AsyncIterator<Int>>;$/;"	p	interface:AggregateAnimeSubscription
count	src/generated/prisma-client/index.d.ts	/^  count: () => Promise<AsyncIterator<Long>>;$/;"	p	interface:BatchPayloadSubscription
count	src/generated/prisma-client/index.d.ts	/^  count: () => Promise<Int>;$/;"	p	interface:AggregateAnimePromise
count	src/generated/prisma-client/index.d.ts	/^  count: () => Promise<Long>;$/;"	p	interface:BatchPayloadPromise
count	src/generated/prisma-client/index.d.ts	/^  count: Int;$/;"	p	interface:AggregateAnime
count	src/generated/prisma-client/index.d.ts	/^  count: Long;$/;"	p	interface:BatchPayload
createAnime	src/generated/prisma-client/index.d.ts	/^  createAnime: (data: AnimeCreateInput) => AnimePromise;$/;"	p	interface:Prisma
cross-fetch	package.json	/^    "cross-fetch": "^3.0.4",$/;"	s	object:dependencies
currentDay	src/helper.js	/^		const currentDay = parse(currentDate, 'dd-MM-yyyy', new Date());$/;"	C
cursor	src/generated/prisma-client/index.d.ts	/^  cursor: () => Promise<AsyncIterator<String>>;$/;"	p	interface:AnimeEdgeSubscription
cursor	src/generated/prisma-client/index.d.ts	/^  cursor: () => Promise<String>;$/;"	p	interface:AnimeEdgePromise
cursor	src/generated/prisma-client/index.d.ts	/^  cursor: String;$/;"	p	interface:AnimeEdge
date-fns	package.json	/^    "date-fns": "2.0.0-beta.2",$/;"	s	object:dependencies
deleteAnime	src/generated/prisma-client/index.d.ts	/^  deleteAnime: (where: AnimeWhereUniqueInput) => AnimePromise;$/;"	p	interface:Prisma
deleteManyAnimes	src/generated/prisma-client/index.d.ts	/^  deleteManyAnimes: (where?: AnimeWhereInput) => BatchPayloadPromise;$/;"	p	interface:Prisma
dependencies	package.json	/^  "dependencies": {$/;"	o
devDependencies	package.json	/^  "devDependencies": {$/;"	o
edges	src/generated/prisma-client/index.d.ts	/^  edges: <T = FragmentableArray<AnimeEdge>>() => T;$/;"	p	interface:AnimeConnectionPromise
edges	src/generated/prisma-client/index.d.ts	/^  edges: <T = Promise<AsyncIterator<AnimeEdgeSubscription>>>() => T;$/;"	p	interface:AnimeConnectionSubscription
edges	src/generated/prisma-client/index.d.ts	/^  edges: AnimeEdge[];$/;"	p	interface:AnimeConnection
endCursor	src/generated/prisma-client/index.d.ts	/^  endCursor: () => Promise<AsyncIterator<String>>;$/;"	p	interface:PageInfoSubscription
endCursor	src/generated/prisma-client/index.d.ts	/^  endCursor: () => Promise<String>;$/;"	p	interface:PageInfoPromise
endCursor	src/generated/prisma-client/index.d.ts	/^  endCursor?: String;$/;"	p	interface:PageInfo
episode	src/generated/prisma-client/index.d.ts	/^  episode: () => Promise<AsyncIterator<Int>>;$/;"	p	interface:AnimePreviousValuesSubscription
episode	src/generated/prisma-client/index.d.ts	/^  episode: () => Promise<AsyncIterator<Int>>;$/;"	p	interface:AnimeSubscription
episode	src/generated/prisma-client/index.d.ts	/^  episode: () => Promise<Int>;$/;"	p	interface:AnimeNullablePromise
episode	src/generated/prisma-client/index.d.ts	/^  episode: () => Promise<Int>;$/;"	p	interface:AnimePreviousValuesPromise
episode	src/generated/prisma-client/index.d.ts	/^  episode: () => Promise<Int>;$/;"	p	interface:AnimePromise
episode	src/generated/prisma-client/index.d.ts	/^  episode: Int;$/;"	p	interface:Anime
episode	src/generated/prisma-client/index.d.ts	/^  episode: Int;$/;"	p	interface:AnimeCreateInput
episode	src/generated/prisma-client/index.d.ts	/^  episode: Int;$/;"	p	interface:AnimePreviousValues
episode	src/generated/prisma-client/index.d.ts	/^  episode?: Maybe<Int>;$/;"	p	interface:AnimeUpdateInput
episode	src/generated/prisma-client/index.d.ts	/^  episode?: Maybe<Int>;$/;"	p	interface:AnimeUpdateManyMutationInput
episode	src/generated/prisma-client/index.d.ts	/^  episode?: Maybe<Int>;$/;"	p	interface:AnimeWhereInput
episode_gt	src/generated/prisma-client/index.d.ts	/^  episode_gt?: Maybe<Int>;$/;"	p	interface:AnimeWhereInput
episode_gte	src/generated/prisma-client/index.d.ts	/^  episode_gte?: Maybe<Int>;$/;"	p	interface:AnimeWhereInput
episode_in	src/generated/prisma-client/index.d.ts	/^  episode_in?: Maybe<Int[] | Int>;$/;"	p	interface:AnimeWhereInput
episode_lt	src/generated/prisma-client/index.d.ts	/^  episode_lt?: Maybe<Int>;$/;"	p	interface:AnimeWhereInput
episode_lte	src/generated/prisma-client/index.d.ts	/^  episode_lte?: Maybe<Int>;$/;"	p	interface:AnimeWhereInput
episode_not	src/generated/prisma-client/index.d.ts	/^  episode_not?: Maybe<Int>;$/;"	p	interface:AnimeWhereInput
episode_not_in	src/generated/prisma-client/index.d.ts	/^  episode_not_in?: Maybe<Int[] | Int>;$/;"	p	interface:AnimeWhereInput
exports	src/generated/prisma-client/prisma-schema.js	/^module.exports = {$/;"	c	class:module
getAnimeList	src/helper.js	/^export const getAnimeList = async ({ apolloClient, currentDate, context: { prisma } }) => {$/;"	C
getNyaaAvailability	src/helper.js	/^export const getNyaaAvailability = async fullTitle => {$/;"	C
graphql	package.json	/^    "graphql": "^14.4.2",$/;"	s	object:dependencies
graphql-yoga	package.json	/^    "graphql-yoga": "1.18.0",$/;"	s	object:dependencies
hasNextPage	src/generated/prisma-client/index.d.ts	/^  hasNextPage: () => Promise<AsyncIterator<Boolean>>;$/;"	p	interface:PageInfoSubscription
hasNextPage	src/generated/prisma-client/index.d.ts	/^  hasNextPage: () => Promise<Boolean>;$/;"	p	interface:PageInfoPromise
hasNextPage	src/generated/prisma-client/index.d.ts	/^  hasNextPage: Boolean;$/;"	p	interface:PageInfo
hasPreviousPage	src/generated/prisma-client/index.d.ts	/^  hasPreviousPage: () => Promise<AsyncIterator<Boolean>>;$/;"	p	interface:PageInfoSubscription
hasPreviousPage	src/generated/prisma-client/index.d.ts	/^  hasPreviousPage: () => Promise<Boolean>;$/;"	p	interface:PageInfoPromise
hasPreviousPage	src/generated/prisma-client/index.d.ts	/^  hasPreviousPage: Boolean;$/;"	p	interface:PageInfo
id	src/generated/prisma-client/index.d.ts	/^  id: () => Promise<AsyncIterator<ID_Output>>;$/;"	p	interface:AnimePreviousValuesSubscription
id	src/generated/prisma-client/index.d.ts	/^  id: () => Promise<AsyncIterator<ID_Output>>;$/;"	p	interface:AnimeSubscription
id	src/generated/prisma-client/index.d.ts	/^  id: () => Promise<ID_Output>;$/;"	p	interface:AnimeNullablePromise
id	src/generated/prisma-client/index.d.ts	/^  id: () => Promise<ID_Output>;$/;"	p	interface:AnimePreviousValuesPromise
id	src/generated/prisma-client/index.d.ts	/^  id: () => Promise<ID_Output>;$/;"	p	interface:AnimePromise
id	src/generated/prisma-client/index.d.ts	/^  id: ID_Output;$/;"	p	interface:Anime
id	src/generated/prisma-client/index.d.ts	/^  id: ID_Output;$/;"	p	interface:AnimePreviousValues
id	src/generated/prisma-client/index.d.ts	/^  id: ID_Output;$/;"	p	interface:NodeNode
id	src/generated/prisma-client/index.d.ts	/^  id?: Maybe<ID_Input>;$/;"	p	interface:AnimeCreateInput
id	src/generated/prisma-client/index.d.ts	/^  id?: Maybe<ID_Input>;$/;"	p	interface:AnimeWhereInput
id_contains	src/generated/prisma-client/index.d.ts	/^  id_contains?: Maybe<ID_Input>;$/;"	p	interface:AnimeWhereInput
id_ends_with	src/generated/prisma-client/index.d.ts	/^  id_ends_with?: Maybe<ID_Input>;$/;"	p	interface:AnimeWhereInput
id_gt	src/generated/prisma-client/index.d.ts	/^  id_gt?: Maybe<ID_Input>;$/;"	p	interface:AnimeWhereInput
id_gte	src/generated/prisma-client/index.d.ts	/^  id_gte?: Maybe<ID_Input>;$/;"	p	interface:AnimeWhereInput
id_in	src/generated/prisma-client/index.d.ts	/^  id_in?: Maybe<ID_Input[] | ID_Input>;$/;"	p	interface:AnimeWhereInput
id_lt	src/generated/prisma-client/index.d.ts	/^  id_lt?: Maybe<ID_Input>;$/;"	p	interface:AnimeWhereInput
id_lte	src/generated/prisma-client/index.d.ts	/^  id_lte?: Maybe<ID_Input>;$/;"	p	interface:AnimeWhereInput
id_not	src/generated/prisma-client/index.d.ts	/^  id_not?: Maybe<ID_Input>;$/;"	p	interface:AnimeWhereInput
id_not_contains	src/generated/prisma-client/index.d.ts	/^  id_not_contains?: Maybe<ID_Input>;$/;"	p	interface:AnimeWhereInput
id_not_ends_with	src/generated/prisma-client/index.d.ts	/^  id_not_ends_with?: Maybe<ID_Input>;$/;"	p	interface:AnimeWhereInput
id_not_in	src/generated/prisma-client/index.d.ts	/^  id_not_in?: Maybe<ID_Input[] | ID_Input>;$/;"	p	interface:AnimeWhereInput
id_not_starts_with	src/generated/prisma-client/index.d.ts	/^  id_not_starts_with?: Maybe<ID_Input>;$/;"	p	interface:AnimeWhereInput
id_starts_with	src/generated/prisma-client/index.d.ts	/^  id_starts_with?: Maybe<ID_Input>;$/;"	p	interface:AnimeWhereInput
models	src/generated/prisma-client/index.d.ts	/^export const models: Model[] = [$/;"	C
models	src/generated/prisma-client/index.js	/^var models = [$/;"	v
mutation	src/generated/prisma-client/index.d.ts	/^  mutation: () => Promise<AsyncIterator<MutationType>>;$/;"	p	interface:AnimeSubscriptionPayloadSubscription
mutation	src/generated/prisma-client/index.d.ts	/^  mutation: () => Promise<MutationType>;$/;"	p	interface:AnimeSubscriptionPayloadPromise
mutation	src/generated/prisma-client/index.d.ts	/^  mutation: MutationType;$/;"	p	interface:AnimeSubscriptionPayload
mutation_in	src/generated/prisma-client/index.d.ts	/^  mutation_in?: Maybe<MutationType[] | MutationType>;$/;"	p	interface:AnimeSubscriptionWhereInput
name	package.json	/^  "name": "nyaa-calendar-api",$/;"	s
new	src/generated/prisma-client/index.d.ts	/^  new (options?: BaseClientOptions): T;$/;"	m	interface:ClientConstructor
nextDay	src/helper.js	/^		const nextDay = addDays(currentDay, 1);$/;"	C
node	src/generated/prisma-client/index.d.ts	/^  node: (args: { id: ID_Output }) => Node;$/;"	p	interface:Prisma
node	src/generated/prisma-client/index.d.ts	/^  node: <T = AnimePromise>() => T;$/;"	p	interface:AnimeEdgePromise
node	src/generated/prisma-client/index.d.ts	/^  node: <T = AnimePromise>() => T;$/;"	p	interface:AnimeSubscriptionPayloadPromise
node	src/generated/prisma-client/index.d.ts	/^  node: <T = AnimeSubscription>() => T;$/;"	p	interface:AnimeEdgeSubscription
node	src/generated/prisma-client/index.d.ts	/^  node: <T = AnimeSubscription>() => T;$/;"	p	interface:AnimeSubscriptionPayloadSubscription
node	src/generated/prisma-client/index.d.ts	/^  node: Anime;$/;"	p	interface:AnimeEdge
node	src/generated/prisma-client/index.d.ts	/^  node: Anime;$/;"	p	interface:AnimeSubscriptionPayload
node	src/generated/prisma-client/index.d.ts	/^  node?: Maybe<AnimeWhereInput>;$/;"	p	interface:AnimeSubscriptionWhereInput
nodemon	package.json	/^    "nodemon": "^1.19.1",$/;"	s	object:devDependencies
nyaapi	package.json	/^    "nyaapi": "^2.0.7",$/;"	s	object:dependencies
pageInfo	src/generated/prisma-client/index.d.ts	/^  pageInfo: <T = PageInfoPromise>() => T;$/;"	p	interface:AnimeConnectionPromise
pageInfo	src/generated/prisma-client/index.d.ts	/^  pageInfo: <T = PageInfoSubscription>() => T;$/;"	p	interface:AnimeConnectionSubscription
pageInfo	src/generated/prisma-client/index.d.ts	/^  pageInfo: PageInfo;$/;"	p	interface:AnimeConnection
parseAnimes	src/helper.js	/^		const parseAnimes = animes.data.Page.airingSchedules.map(({ episode, media: anime }) => ({$/;"	C
parseStudios	src/helper.js	/^const parseStudios = rawStudios => rawStudios.edges.map(({ node }) => node.name);$/;"	C
previousValues	src/generated/prisma-client/index.d.ts	/^  previousValues: <T = AnimePreviousValuesPromise>() => T;$/;"	p	interface:AnimeSubscriptionPayloadPromise
previousValues	src/generated/prisma-client/index.d.ts	/^  previousValues: <T = AnimePreviousValuesSubscription>() => T;$/;"	p	interface:AnimeSubscriptionPayloadSubscription
previousValues	src/generated/prisma-client/index.d.ts	/^  previousValues: AnimePreviousValues;$/;"	p	interface:AnimeSubscriptionPayload
prisma	package.json	/^    "prisma": "1.34.0"$/;"	s	object:devDependencies
prisma	package.json	/^    "prisma": "prisma"$/;"	s	object:scripts
prisma	src/generated/prisma-client/index.d.ts	/^export const prisma: Prisma;$/;"	C
prisma	src/generated/prisma-client/index.js	/^exports.prisma = new exports.Prisma();$/;"	v	class:exports
prisma-client-lib	package.json	/^    "prisma-client-lib": "1.34.0"$/;"	s	object:dependencies
prisma_lib_1	src/generated/prisma-client/index.js	/^var prisma_lib_1 = require("prisma-client-lib");$/;"	v
published	src/generated/prisma-client/index.d.ts	/^  published: () => Promise<AsyncIterator<Boolean>>;$/;"	p	interface:AnimePreviousValuesSubscription
published	src/generated/prisma-client/index.d.ts	/^  published: () => Promise<AsyncIterator<Boolean>>;$/;"	p	interface:AnimeSubscription
published	src/generated/prisma-client/index.d.ts	/^  published: () => Promise<Boolean>;$/;"	p	interface:AnimeNullablePromise
published	src/generated/prisma-client/index.d.ts	/^  published: () => Promise<Boolean>;$/;"	p	interface:AnimePreviousValuesPromise
published	src/generated/prisma-client/index.d.ts	/^  published: () => Promise<Boolean>;$/;"	p	interface:AnimePromise
published	src/generated/prisma-client/index.d.ts	/^  published: Boolean;$/;"	p	interface:Anime
published	src/generated/prisma-client/index.d.ts	/^  published: Boolean;$/;"	p	interface:AnimePreviousValues
published	src/generated/prisma-client/index.d.ts	/^  published?: Maybe<Boolean>;$/;"	p	interface:AnimeCreateInput
published	src/generated/prisma-client/index.d.ts	/^  published?: Maybe<Boolean>;$/;"	p	interface:AnimeUpdateInput
published	src/generated/prisma-client/index.d.ts	/^  published?: Maybe<Boolean>;$/;"	p	interface:AnimeUpdateManyMutationInput
published	src/generated/prisma-client/index.d.ts	/^  published?: Maybe<Boolean>;$/;"	p	interface:AnimeWhereInput
published_not	src/generated/prisma-client/index.d.ts	/^  published_not?: Maybe<Boolean>;$/;"	p	interface:AnimeWhereInput
resolvers	src/index.js	/^const resolvers = {$/;"	c
scripts	package.json	/^  "scripts": {$/;"	o
searchResult	src/helper.js	/^	const searchResult = await si.seach(fullTitle, 1, { category: '1_2' });$/;"	C
server	src/index.js	/^const server = new GraphQLServer({$/;"	C
slug	src/generated/prisma-client/index.d.ts	/^  slug: () => Promise<AsyncIterator<String>>;$/;"	p	interface:AnimePreviousValuesSubscription
slug	src/generated/prisma-client/index.d.ts	/^  slug: () => Promise<AsyncIterator<String>>;$/;"	p	interface:AnimeSubscription
slug	src/generated/prisma-client/index.d.ts	/^  slug: () => Promise<String>;$/;"	p	interface:AnimeNullablePromise
slug	src/generated/prisma-client/index.d.ts	/^  slug: () => Promise<String>;$/;"	p	interface:AnimePreviousValuesPromise
slug	src/generated/prisma-client/index.d.ts	/^  slug: () => Promise<String>;$/;"	p	interface:AnimePromise
slug	src/generated/prisma-client/index.d.ts	/^  slug: String;$/;"	p	interface:Anime
slug	src/generated/prisma-client/index.d.ts	/^  slug: String;$/;"	p	interface:AnimeCreateInput
slug	src/generated/prisma-client/index.d.ts	/^  slug: String;$/;"	p	interface:AnimePreviousValues
slug	src/generated/prisma-client/index.d.ts	/^  slug?: Maybe<String>;$/;"	p	interface:AnimeUpdateInput
slug	src/generated/prisma-client/index.d.ts	/^  slug?: Maybe<String>;$/;"	p	interface:AnimeUpdateManyMutationInput
slug	src/generated/prisma-client/index.d.ts	/^  slug?: Maybe<String>;$/;"	p	interface:AnimeWhereInput
slug_contains	src/generated/prisma-client/index.d.ts	/^  slug_contains?: Maybe<String>;$/;"	p	interface:AnimeWhereInput
slug_ends_with	src/generated/prisma-client/index.d.ts	/^  slug_ends_with?: Maybe<String>;$/;"	p	interface:AnimeWhereInput
slug_gt	src/generated/prisma-client/index.d.ts	/^  slug_gt?: Maybe<String>;$/;"	p	interface:AnimeWhereInput
slug_gte	src/generated/prisma-client/index.d.ts	/^  slug_gte?: Maybe<String>;$/;"	p	interface:AnimeWhereInput
slug_in	src/generated/prisma-client/index.d.ts	/^  slug_in?: Maybe<String[] | String>;$/;"	p	interface:AnimeWhereInput
slug_lt	src/generated/prisma-client/index.d.ts	/^  slug_lt?: Maybe<String>;$/;"	p	interface:AnimeWhereInput
slug_lte	src/generated/prisma-client/index.d.ts	/^  slug_lte?: Maybe<String>;$/;"	p	interface:AnimeWhereInput
slug_not	src/generated/prisma-client/index.d.ts	/^  slug_not?: Maybe<String>;$/;"	p	interface:AnimeWhereInput
slug_not_contains	src/generated/prisma-client/index.d.ts	/^  slug_not_contains?: Maybe<String>;$/;"	p	interface:AnimeWhereInput
slug_not_ends_with	src/generated/prisma-client/index.d.ts	/^  slug_not_ends_with?: Maybe<String>;$/;"	p	interface:AnimeWhereInput
slug_not_in	src/generated/prisma-client/index.d.ts	/^  slug_not_in?: Maybe<String[] | String>;$/;"	p	interface:AnimeWhereInput
slug_not_starts_with	src/generated/prisma-client/index.d.ts	/^  slug_not_starts_with?: Maybe<String>;$/;"	p	interface:AnimeWhereInput
slug_starts_with	src/generated/prisma-client/index.d.ts	/^  slug_starts_with?: Maybe<String>;$/;"	p	interface:AnimeWhereInput
start	package.json	/^    "start": "nodemon src\/index.js --exec babel-node",$/;"	s	object:scripts
startCursor	src/generated/prisma-client/index.d.ts	/^  startCursor: () => Promise<AsyncIterator<String>>;$/;"	p	interface:PageInfoSubscription
startCursor	src/generated/prisma-client/index.d.ts	/^  startCursor: () => Promise<String>;$/;"	p	interface:PageInfoPromise
startCursor	src/generated/prisma-client/index.d.ts	/^  startCursor?: String;$/;"	p	interface:PageInfo
title	src/generated/prisma-client/index.d.ts	/^  title: () => Promise<AsyncIterator<String>>;$/;"	p	interface:AnimePreviousValuesSubscription
title	src/generated/prisma-client/index.d.ts	/^  title: () => Promise<AsyncIterator<String>>;$/;"	p	interface:AnimeSubscription
title	src/generated/prisma-client/index.d.ts	/^  title: () => Promise<String>;$/;"	p	interface:AnimeNullablePromise
title	src/generated/prisma-client/index.d.ts	/^  title: () => Promise<String>;$/;"	p	interface:AnimePreviousValuesPromise
title	src/generated/prisma-client/index.d.ts	/^  title: () => Promise<String>;$/;"	p	interface:AnimePromise
title	src/generated/prisma-client/index.d.ts	/^  title: String;$/;"	p	interface:Anime
title	src/generated/prisma-client/index.d.ts	/^  title: String;$/;"	p	interface:AnimeCreateInput
title	src/generated/prisma-client/index.d.ts	/^  title: String;$/;"	p	interface:AnimePreviousValues
title	src/generated/prisma-client/index.d.ts	/^  title?: Maybe<String>;$/;"	p	interface:AnimeUpdateInput
title	src/generated/prisma-client/index.d.ts	/^  title?: Maybe<String>;$/;"	p	interface:AnimeUpdateManyMutationInput
title	src/generated/prisma-client/index.d.ts	/^  title?: Maybe<String>;$/;"	p	interface:AnimeWhereInput
title_contains	src/generated/prisma-client/index.d.ts	/^  title_contains?: Maybe<String>;$/;"	p	interface:AnimeWhereInput
title_ends_with	src/generated/prisma-client/index.d.ts	/^  title_ends_with?: Maybe<String>;$/;"	p	interface:AnimeWhereInput
title_gt	src/generated/prisma-client/index.d.ts	/^  title_gt?: Maybe<String>;$/;"	p	interface:AnimeWhereInput
title_gte	src/generated/prisma-client/index.d.ts	/^  title_gte?: Maybe<String>;$/;"	p	interface:AnimeWhereInput
title_in	src/generated/prisma-client/index.d.ts	/^  title_in?: Maybe<String[] | String>;$/;"	p	interface:AnimeWhereInput
title_lt	src/generated/prisma-client/index.d.ts	/^  title_lt?: Maybe<String>;$/;"	p	interface:AnimeWhereInput
title_lte	src/generated/prisma-client/index.d.ts	/^  title_lte?: Maybe<String>;$/;"	p	interface:AnimeWhereInput
title_not	src/generated/prisma-client/index.d.ts	/^  title_not?: Maybe<String>;$/;"	p	interface:AnimeWhereInput
title_not_contains	src/generated/prisma-client/index.d.ts	/^  title_not_contains?: Maybe<String>;$/;"	p	interface:AnimeWhereInput
title_not_ends_with	src/generated/prisma-client/index.d.ts	/^  title_not_ends_with?: Maybe<String>;$/;"	p	interface:AnimeWhereInput
title_not_in	src/generated/prisma-client/index.d.ts	/^  title_not_in?: Maybe<String[] | String>;$/;"	p	interface:AnimeWhereInput
title_not_starts_with	src/generated/prisma-client/index.d.ts	/^  title_not_starts_with?: Maybe<String>;$/;"	p	interface:AnimeWhereInput
title_starts_with	src/generated/prisma-client/index.d.ts	/^  title_starts_with?: Maybe<String>;$/;"	p	interface:AnimeWhereInput
transformTitle	src/helper.js	/^const transformTitle = title => title.split(' ').map(word => word.toLowerCase()).join('-');$/;"	C
typeDefs	src/generated/prisma-client/index.js	/^var typeDefs = require(".\/prisma-schema").typeDefs;$/;"	v
typeDefs	src/generated/prisma-client/prisma-schema.js	/^        typeDefs: \/\/ Code generated by Prisma (prisma@1.34.0). DO NOT EDIT.$/;"	p	class:module.exports
updateAnime	src/generated/prisma-client/index.d.ts	/^  updateAnime: (args: {$/;"	p	interface:Prisma
updateManyAnimes	src/generated/prisma-client/index.d.ts	/^  updateManyAnimes: (args: {$/;"	p	interface:Prisma
updatedFields	src/generated/prisma-client/index.d.ts	/^  updatedFields: () => Promise<AsyncIterator<String[]>>;$/;"	p	interface:AnimeSubscriptionPayloadSubscription
updatedFields	src/generated/prisma-client/index.d.ts	/^  updatedFields: () => Promise<String[]>;$/;"	p	interface:AnimeSubscriptionPayloadPromise
updatedFields	src/generated/prisma-client/index.d.ts	/^  updatedFields: String[];$/;"	p	interface:AnimeSubscriptionPayload
updatedFields_contains	src/generated/prisma-client/index.d.ts	/^  updatedFields_contains?: Maybe<String>;$/;"	p	interface:AnimeSubscriptionWhereInput
updatedFields_contains_every	src/generated/prisma-client/index.d.ts	/^  updatedFields_contains_every?: Maybe<String[] | String>;$/;"	p	interface:AnimeSubscriptionWhereInput
updatedFields_contains_some	src/generated/prisma-client/index.d.ts	/^  updatedFields_contains_some?: Maybe<String[] | String>;$/;"	p	interface:AnimeSubscriptionWhereInput
upsertAnime	src/generated/prisma-client/index.d.ts	/^  upsertAnime: (args: {$/;"	p	interface:Prisma
